// Code generated by 'yaegi extract gioui.org/io/event'. DO NOT EDIT.

package giopkgs

import (
	"gioui.org/io/event"
	"reflect"
)

func init() {
	Symbols["gioui.org/io/event"] = map[string]reflect.Value{
		// type definitions
		"Event": reflect.ValueOf((*event.Event)(nil)),
		"Queue": reflect.ValueOf((*event.Queue)(nil)),
		"Tag":   reflect.ValueOf((*event.Tag)(nil)),

		// interface wrapper definitions
		"_Event": reflect.ValueOf((*_gioui_org_io_event_Event)(nil)),
		"_Queue": reflect.ValueOf((*_gioui_org_io_event_Queue)(nil)),
		"_Tag":   reflect.ValueOf((*_gioui_org_io_event_Tag)(nil)),
	}
}

// _gioui_org_io_event_Event is an interface wrapper for Event type
type _gioui_org_io_event_Event struct {
	WImplementsEvent func()
}

func (W _gioui_org_io_event_Event) ImplementsEvent() { W.WImplementsEvent() }

// _gioui_org_io_event_Queue is an interface wrapper for Queue type
type _gioui_org_io_event_Queue struct {
	WEvents func(t event.Tag) []event.Event
}

func (W _gioui_org_io_event_Queue) Events(t event.Tag) []event.Event { return W.WEvents(t) }

// _gioui_org_io_event_Tag is an interface wrapper for Tag type
type _gioui_org_io_event_Tag struct {
}
