// Code generated by 'yaegi extract gioui.org/widget'. DO NOT EDIT.

package giopkgs

import (
	"gioui.org/widget"
	"reflect"
)

func init() {
	Symbols["gioui.org/widget"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"NewIcon": reflect.ValueOf(widget.NewIcon),

		// type definitions
		"Bool":        reflect.ValueOf((*widget.Bool)(nil)),
		"Border":      reflect.ValueOf((*widget.Border)(nil)),
		"ChangeEvent": reflect.ValueOf((*widget.ChangeEvent)(nil)),
		"Click":       reflect.ValueOf((*widget.Click)(nil)),
		"Clickable":   reflect.ValueOf((*widget.Clickable)(nil)),
		"Editor":      reflect.ValueOf((*widget.Editor)(nil)),
		"EditorEvent": reflect.ValueOf((*widget.EditorEvent)(nil)),
		"Enum":        reflect.ValueOf((*widget.Enum)(nil)),
		"Float":       reflect.ValueOf((*widget.Float)(nil)),
		"Icon":        reflect.ValueOf((*widget.Icon)(nil)),
		"Image":       reflect.ValueOf((*widget.Image)(nil)),
		"Label":       reflect.ValueOf((*widget.Label)(nil)),
		"Press":       reflect.ValueOf((*widget.Press)(nil)),
		"SelectEvent": reflect.ValueOf((*widget.SelectEvent)(nil)),
		"SubmitEvent": reflect.ValueOf((*widget.SubmitEvent)(nil)),

		// interface wrapper definitions
		"_EditorEvent": reflect.ValueOf((*_gioui_org_widget_EditorEvent)(nil)),
	}
}

// _gioui_org_widget_EditorEvent is an interface wrapper for EditorEvent type
type _gioui_org_widget_EditorEvent struct {
}
