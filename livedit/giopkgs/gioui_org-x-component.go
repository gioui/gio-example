// Code generated by 'yaegi extract gioui.org/x/component'. DO NOT EDIT.

package giopkgs

import (
	"gioui.org/x/component"
	"reflect"
)

func init() {
	Symbols["gioui.org/x/component"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"Appearing":        reflect.ValueOf(component.Appearing),
		"Bottom":           reflect.ValueOf(component.Bottom),
		"Disappearing":     reflect.ValueOf(component.Disappearing),
		"Forward":          reflect.ValueOf(component.Forward),
		"Interpolate":      reflect.ValueOf(component.Interpolate),
		"Invisible":        reflect.ValueOf(component.Invisible),
		"ModalNavFrom":     reflect.ValueOf(component.ModalNavFrom),
		"NewAppBar":        reflect.ValueOf(component.NewAppBar),
		"NewModal":         reflect.ValueOf(component.NewModal),
		"NewModalNav":      reflect.ValueOf(component.NewModalNav),
		"NewModalSheet":    reflect.ValueOf(component.NewModalSheet),
		"NewNav":           reflect.ValueOf(component.NewNav),
		"NewSheet":         reflect.ValueOf(component.NewSheet),
		"Reverse":          reflect.ValueOf(component.Reverse),
		"SimpleIconAction": reflect.ValueOf(component.SimpleIconAction),
		"SimpleIconButton": reflect.ValueOf(component.SimpleIconButton),
		"SwapGrounds":      reflect.ValueOf(component.SwapGrounds),
		"SwapPairs":        reflect.ValueOf(component.SwapPairs),
		"Top":              reflect.ValueOf(component.Top),
		"Visible":          reflect.ValueOf(component.Visible),
		"WithAlpha":        reflect.ValueOf(component.WithAlpha),

		// type definitions
		"AlphaPalette":                reflect.ValueOf((*component.AlphaPalette)(nil)),
		"AppBar":                      reflect.ValueOf((*component.AppBar)(nil)),
		"AppBarAction":                reflect.ValueOf((*component.AppBarAction)(nil)),
		"AppBarContextMenuDismissed":  reflect.ValueOf((*component.AppBarContextMenuDismissed)(nil)),
		"AppBarEvent":                 reflect.ValueOf((*component.AppBarEvent)(nil)),
		"AppBarNavigationClicked":     reflect.ValueOf((*component.AppBarNavigationClicked)(nil)),
		"AppBarOverflowActionClicked": reflect.ValueOf((*component.AppBarOverflowActionClicked)(nil)),
		"C":                           reflect.ValueOf((*component.C)(nil)),
		"D":                           reflect.ValueOf((*component.D)(nil)),
		"Hoverable":                   reflect.ValueOf((*component.Hoverable)(nil)),
		"ModalLayer":                  reflect.ValueOf((*component.ModalLayer)(nil)),
		"ModalNavDrawer":              reflect.ValueOf((*component.ModalNavDrawer)(nil)),
		"ModalSheet":                  reflect.ValueOf((*component.ModalSheet)(nil)),
		"NavDrawer":                   reflect.ValueOf((*component.NavDrawer)(nil)),
		"NavItem":                     reflect.ValueOf((*component.NavItem)(nil)),
		"OverflowAction":              reflect.ValueOf((*component.OverflowAction)(nil)),
		"Progress":                    reflect.ValueOf((*component.Progress)(nil)),
		"ProgressDirection":           reflect.ValueOf((*component.ProgressDirection)(nil)),
		"Rect":                        reflect.ValueOf((*component.Rect)(nil)),
		"Scrim":                       reflect.ValueOf((*component.Scrim)(nil)),
		"Sheet":                       reflect.ValueOf((*component.Sheet)(nil)),
		"TextField":                   reflect.ValueOf((*component.TextField)(nil)),
		"TruncatingLabelStyle":        reflect.ValueOf((*component.TruncatingLabelStyle)(nil)),
		"Validator":                   reflect.ValueOf((*component.Validator)(nil)),
		"VerticalAnchorPosition":      reflect.ValueOf((*component.VerticalAnchorPosition)(nil)),
		"VisibilityAnimation":         reflect.ValueOf((*component.VisibilityAnimation)(nil)),
		"VisibilityAnimationState":    reflect.ValueOf((*component.VisibilityAnimationState)(nil)),

		// interface wrapper definitions
		"_AppBarEvent": reflect.ValueOf((*_gioui_org_x_component_AppBarEvent)(nil)),
	}
}

// _gioui_org_x_component_AppBarEvent is an interface wrapper for AppBarEvent type
type _gioui_org_x_component_AppBarEvent struct {
	WAppBarEvent func()
}

func (W _gioui_org_x_component_AppBarEvent) AppBarEvent() { W.WAppBarEvent() }
